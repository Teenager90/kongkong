C51 COMPILER V9.01   MAIN                                                                  11/26/2016 09:01:04 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <main.h>
   2          uint8  crc_Check=0;
   3          uint8  getCount = 0;
   4          uint8   temp = 0;
   5          uint8 idata aa[5]={0x01,0x02,0x03,0x04,0x05};
   6          void Uart2_Isr() interrupt 8 //using 1   
   7          {       
   8   1      //      DO1=0;
   9   1      //      if(S2CON & S2TI)
  10   1      //      {
  11   1      //      }
  12   1      uint16 crcData;
  13   1              if (S2CON & S2RI)
  14   1              {               
  15   2                      S2CON &= ~S2RI;           //清除接收完成标志
  16   2      
  17   2                      rece2Buf[rece2Count]=S2BUF;     //接收一个字节数据
  18   2                      rece2Count++; 
  19   2                      if(rece2Buf[0] == 0x20&& rece2Buf[1] == 0x03 && rece2Buf[2]==0x04)        //判断接收开始标志
  20   2                      {
  21   3                              if((rece2Count==9))                              //判断接收完成
  22   3                              {
  23   4                              crcData = crc16(rece2Buf,7);
  24   4                                      if((rece2Buf[7] == (uint8)((crcData&0xff00)>>8))&&
  25   4                                              (rece2Buf[8] == (uint8)(crcData&0x00ff)))                                                //数组清零
  26   4                                     checkUart2data();                                           //处理接收数据
  27   4                                      rece2Count=0;
  28   4                              }
  29   3                              else
  30   3                              {
  31   4                              }
  32   3                      }
  33   2      
  34   2              }
  35   1      
  36   1      
  37   1      }
  38          
  39          
  40          /*********************************************************************/
  41          
  42          /*********************************************************************/
  43          uint8 Rx_i = 0;
  44          uint16 crcData; 
  45          void Uart_Isr() interrupt 4 //using 1 
  46          {       
  47   1      
  48   1              if(TI)
  49   1              {
  50   2              //      TI=0;
  51   2          
  52   2              }
  53   1              if(RI)      
  54   1              { 
  55   2                      RI=0;                                 //接收到数据中断请求位手动清零
C51 COMPILER V9.01   MAIN                                                                  11/26/2016 09:01:04 PAGE 2   

  56   2                      Rx_i=SBUF;                            //提取字符
  57   2                      receCount++;
  58   2                      if(RxFlag==0)
  59   2                      {       
  60   3                              if((receCount==1)&&(Rx_i == 0xa5))              //判断前两个字节
  61   3                              {
  62   4                                      receBuf[0] = Rx_i;
  63   4                              }
  64   3                              else if((receCount==2)&&(Rx_i == 0x5a))
  65   3                              {
  66   4                                      receBuf[1] = Rx_i;
  67   4                              }                                                
  68   3                              else if((receCount>2)&&(receBuf[0] == 0xa5) && (receBuf[1] ==0x5a))
  69   3                              {
  70   4                                      receBuf[receCount-1]=Rx_i;                                          //接收一个字节数据                          
  71   4                                      if((receBuf[0] == 0xa5) && (receBuf[1] ==0x5a)&&(receCount>6))                  //
  72   4                                      {
  73   5                                      getCount = receBuf[4];
  74   5                                              if(receCount==(getCount+8))
  75   5                                              {
  76   6                                              if(receBuf[(getCount+7)]==0xBF)          //判断是否接收完成
  77   6                                              {
  78   7      
  79   7                                                      switch(receBuf[3])
  80   7                                                      { 
  81   8                                                              case 0x03://读取保持寄存器，读多路采集信号，对于传感板只需考虑功能3
  82   8                                                              {
  83   9                                                                      if(receBuf[2] == localAddr)                      //设备地址正确
  84   9                                                                      {
  85  10                                                                      crcData = crc16(receBuf,(getCount+5));
  86  10                                                                              if((receBuf[(getCount+5)] == (uint8)((crcData&0xff00)>>8))&&
  87  10                                                                                 (receBuf[(getCount+6)] == (uint8)(crcData&0x00ff))
  88  10                                                                            )
  89  10      //                                                                      if(crcData == receBuf[(getCount+6)]+(receBuf[(getCount+5)]<<8))                 //校验正确
  90  10                                                                              {
  91  11      //                                                                              crc_Check=1;
  92  11                                                                                      RxFlag=1;       
  93  11                                                                      }
  94  10                                                                              else
  95  10                                                                              {
  96  11      //                                                                              crc_Check=2;
  97  11      //                                                                              RxFlag=1;
  98  11                                                                                      rep_Error();
  99  11                                                                              }
 100  10      
 101  10                                                              }
 102   9                                                                      break;
 103   9                                                              }
 104   8                                                              default:
 105   8                                                              {
 106   9                                                                      break;
 107   9                                                              }
 108   8                                                      }
 109   7                                                      receCount = 0;                                                                   
 110   7                                              }       
 111   6      //                                      else if(receCount!=(getCount+8))
 112   6                                              else
 113   6                                              {
 114   7                                                      receCount=0;
 115   7                                                      RxFlag=0;
 116   7                                                      memset(receBuf,0,sizeof(receBuf));
 117   7                                              }
C51 COMPILER V9.01   MAIN                                                                  11/26/2016 09:01:04 PAGE 3   

 118   6                                              }
 119   5      
 120   5      
 121   5                                      }
 122   4      //                              else if(receCount>=20)
 123   4      //                              {                       
 124   4      //                              receCount=0;
 125   4      //                                      RxFlag=0;
 126   4      //                                      memset(receBuf,0,sizeof(receBuf));
 127   4      //                              }
 128   4                              }
 129   3                              else
 130   3                                      receCount =0;
 131   3                      }
 132   2                      else
 133   2                              receCount=0;
 134   2              }
 135   1      }
 136          
 137          void Timer0_Isr() interrupt 1
 138          {
 139   1              TR0=0;                                   //关定时器0
 140   1              temp++;
 141   1              if(temp==40)
 142   1              {       
 143   2      //          getMulti_soilwaterdata();
 144   2                      temp=0;
 145   2              }
 146   1              TH0 = 0x4C;
 147   1              TL0 = 0x00;
 148   1              TR0=1;
 149   1      }
 150          void main()
 151          {       
 152   1              rece2Count=0;
 153   1              receCount=0;
 154   1              port_init();
 155   1              timer0_init();
 156   1              uart1_init();
 157   1              uart2_init();
 158   1              RS485E=0;
 159   1      
 160   1      //      WDT_CONTR = 0x3E;    //启动看门狗复位，周期为4.5511s
 161   1      
 162   1              while(1)
 163   1              {
 164   2      
 165   2                      if(RxFlag==1)
 166   2                      {
 167   3      //                      if(crc_Check==1)
 168   3                                      readRegisters();
 169   3      //                              Uart2Sendstr(sendCount,sendBuf);                                                                //处理接收数据
 170   3      //                      else if(crc_Check==2)
 171   3      //                              rep_Error();
 172   3                              memset(receBuf,0,20);                                                           //清零
 173   3                              receCount=0;
 174   3                              RxFlag = 0;
 175   3                              crc_Check = 0;                                                                                  //清除标志位
 176   3                      }
 177   2                      getSHTdata();  //采集数据SHT数据每次循环采集，还是收到modbus采集数据时再采集呢？？是否需要多次测量求平均
             -？两次读取间隔至少0.8S,
 178   2                      getBH1750data();    //采集数据BH1750光照数据
C51 COMPILER V9.01   MAIN                                                                  11/26/2016 09:01:04 PAGE 4   

 179   2      
 180   2                  getMGS811data();    //MGS811数据
 181   2                      getsoilwaterdata(); //土壤水分含量测量
 182   2                      getsoiltempdata();  //土壤温度测量
*** WARNING C206 IN LINE 182 OF MAIN.C: 'getsoiltempdata': missing function-prototype
 183   2      //              WDT_CONTR = 0x3E;    //看门狗复位，周期为4.5511s
 184   2              }
 185   1      }
 186          
 187          
 188          
 189          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    512    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =      5    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
